# This workflow will build a docker container, publish it to Google Container
# Registry, and deploy it to GKE when there is a push to the $default-branch
# branch.
#
# To configure this workflow:
#
# 1. Enable the following Google Cloud APIs:
#
#    - Artifact Registry (artifactregistry.googleapis.com)
#    - Google Kubernetes Engine (container.googleapis.com)
#    - IAM Credentials API (iamcredentials.googleapis.com)
#
#    You can learn more about enabling APIs at
#    https://support.google.com/googleapi/answer/6158841.
#
# 2. Ensure that your repository contains the necessary configuration for your
#    Google Kubernetes Engine cluster, including deployment.yml,
#    kustomization.yml, service.yml, etc.
#
# 3. Create and configure a Workload Identity Provider for GitHub:
#    https://github.com/google-github-actions/auth#preferred-direct-workload-identity-federation.
#
#    Depending on how you authenticate, you will need to grant an IAM principal
#    permissions on Google Cloud:
#
#    - Artifact Registry Administrator (roles/artifactregistry.admin)
#    - Kubernetes Engine Developer (roles/container.developer)
#
#    You can learn more about setting IAM permissions at
#    https://cloud.google.com/iam/docs/manage-access-other-resources
#
# 5. Change the values in the "env" block to match your values.
name: Build, Push, and Deploy to GKE

on:
  push:
    branches: ["main"]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}          # Your GCP project ID
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}            # Name of your Autopilot cluster
  GKE_REGION: ${{ secrets.GKE_REGION }}              # Region (e.g., us-central1)
  ARTIFACT_REGISTRY_REPO: dera-gcr               # Your Artifact Registry repo name
  #IMAGE_NAME: ${{ env.GKE_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/dera-python-app


jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set IMAGE_NAME dynamically
        run: |
          echo "IMAGE_NAME=${GKE_REGION}-docker.pkg.dev/${PROJECT_ID}/${ARTIFACT_REGISTRY_REPO}/dera-python-app" >> $GITHUB_ENV


      # Setup gcloud CLI
      - name: Set up Google Cloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          export_default_credentials: true
          docker_components: docker-credential-gcr  # Auto-configures Docker for Artifact Registry

      # Authenticate to GKE Autopilot (regional cluster)
      - name: Configure GKE Autopilot Credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_REGION }}  # For Autopilot, use region (not zone)
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: Build and Push Image
        run: |
          TAG=${{ github.sha }}
          docker build -t ${{ env.IMAGE_NAME }}:$TAG .
          docker push ${{ env.IMAGE_NAME }}:$TAG

      - name: Set up Kustomize
        run: |
          curl -sLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v4.5.7/kustomize_4.5.7_linux_amd64
          chmod +x kustomize
          sudo mv kustomize /usr/local/bin/

      - name: Update Kustomize Image
        run: |
          cd ${{ github.workspace }}/k8s/overlays/dev
          kustomize edit set image PROJECT_ID-docker.pkg.dev/PROJECT_ID/ARTIFACT_REGISTRY_REPO/IMAGE:TAG=${{ env.IMAGE_NAME }}:${{ github.sha }}

      # Deploy using Kustomize
      - name: Deploy to GKE Autopilot
        run: |
          kubectl apply -k k8s/overlays/dev

      - name: Verify Deployment
        run: kubectl get services
