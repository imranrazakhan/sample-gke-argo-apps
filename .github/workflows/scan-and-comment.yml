name: backend-ci
on:
  push:
    branches:
      - main
      - staging
      - develop
  pull_request:
    types:
      - opened
    paths:
      - "Dockerfile"
  workflow_dispatch: # For manual execution

jobs:
  #setup:
    # Details omitted for brevity

  #test:
    # Details omitted for brevity

  #lint:
    # Details omitted for brevity

  #tsc:
    # Details omitted for brevity

  scan-and-comment:
    runs-on: ubuntu-latest
    #if: github.event_name == 'pull_request' && github.event.action == 'opened'
    env:
      IMAGE_NAME: trialer2m3n.jfrog.io/ravi-docker/my-flask-app:${{ github.run_number }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Tag and push Docker Image
        run: |
          docker build -t $IMAGE_NAME .

      - name: Scan image with Trivy
        env:
          IMAGE_NAME: trialer2m3n.jfrog.io/ravi-docker/my-flask-app:${{ github.run_number }}
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ${{ env.IMAGE_NAME }}
          format: "table"
          severity: "CRITICAL,HIGH"
          output: trivy-result.txt

      - name: Check Trivy result file
        run: cat trivy-result.txt

      - name: Format Trivy Scan Result
        run: |
          if [ -s trivy-result.txt ]; then
            echo -e "## Vulnerability Scan Results\n<details><summary>Details</summary>\n\n\`\`\`\n$(cat trivy-result.txt)\n\`\`\`\n</details>" > formatted-trivy-result.md
          else
            echo -e "## Vulnerability Scan Results\nNo vulnerabilities were detected." > formatted-trivy-result.md
          fi

      - name: Comment PR with Trivy scan results
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: formatted-trivy-result.md

      - name: Clean up Trivy result file
        run: rm -f trivy-result.txt formatted-trivy-result.md
